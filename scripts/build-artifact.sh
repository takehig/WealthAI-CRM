#!/bin/bash

# WealthAI „Ç¢„Éº„ÉÜ„Ç£„Éï„Ç°„ÇØ„Éà‰ΩúÊàê„Çπ„ÇØ„É™„Éó„Éà
# Usage: ./scripts/build-artifact.sh [version]

set -e

# Ë®≠ÂÆö
PROJECT_DIR="/mnt/c/Users/takehig/QCHAT/.qchat_projects/WealthAI"
BUILD_DIR="$PROJECT_DIR/build"
VERSION=${1:-$(date +%Y%m%d-%H%M%S)}
ARTIFACT_NAME="wealthai-${VERSION}.zip"

# Ëâ≤‰ªò„Åç„É≠„Ç∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# „Éì„É´„Éâ„Éá„Ç£„É¨„ÇØ„Éà„É™Ê∫ñÂÇô
log_info "Preparing build directory..."
rm -rf "$BUILD_DIR"
mkdir -p "$BUILD_DIR/wealthai"

# ÂøÖË¶Å„Å™„Éï„Ç°„Ç§„É´„Çí„Ç≥„Éî„Éº
log_info "Copying application files..."
cp -r src/ "$BUILD_DIR/wealthai/"
cp -r templates/ "$BUILD_DIR/wealthai/"
cp requirements.txt "$BUILD_DIR/wealthai/"
cp .env "$BUILD_DIR/wealthai/"

# „Éá„Éº„Çø„Éï„Ç°„Ç§„É´„Çí„Ç≥„Éî„ÉºÔºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
if [ -d "data/csv" ]; then
    log_info "Copying data files..."
    cp -r data/ "$BUILD_DIR/wealthai/"
fi

# SQL„Éï„Ç°„Ç§„É´„Çí„Ç≥„Éî„ÉºÔºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
if [ -d "sql" ]; then
    log_info "Copying SQL files..."
    cp -r sql/ "$BUILD_DIR/wealthai/"
fi

# „Éá„Éó„É≠„Ç§„É°„É≥„ÉàÊÉÖÂ†±„ÇíËøΩÂä†
log_info "Adding deployment metadata..."
cat > "$BUILD_DIR/wealthai/deployment-info.json" << EOF
{
    "version": "$VERSION",
    "build_time": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
    "build_host": "$(hostname)",
    "git_commit": "$(git rev-parse HEAD 2>/dev/null || echo 'unknown')",
    "git_branch": "$(git branch --show-current 2>/dev/null || echo 'unknown')"
}
EOF

# EC2Áî®„Éá„Éó„É≠„Ç§„Çπ„ÇØ„É™„Éó„Éà„ÇíËøΩÂä†
log_info "Adding deployment script..."
cat > "$BUILD_DIR/wealthai/deploy.sh" << 'EOF'
#!/bin/bash
# EC2‰∏ä„ÅßÂÆüË°å„Åï„Çå„Çã„Éá„Éó„É≠„Ç§„Çπ„ÇØ„É™„Éó„Éà

set -e

APP_DIR="/home/ubuntu/wealthai"
BACKUP_DIR="/home/ubuntu/wealthai-backup-$(date +%Y%m%d-%H%M%S)"

echo "üöÄ Starting deployment..."

# „Éê„ÉÉ„ÇØ„Ç¢„ÉÉ„Éó‰ΩúÊàê
if [ -d "$APP_DIR" ]; then
    echo "üì¶ Creating backup..."
    cp -r "$APP_DIR" "$BACKUP_DIR"
fi

# „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ÂÅúÊ≠¢
echo "‚èπÔ∏è  Stopping application..."
sudo systemctl stop wealthai || true

# Êñ∞„Åó„ÅÑ„Éï„Ç°„Ç§„É´„ÇíÈÖçÁΩÆ
echo "üìÅ Deploying new files..."
mkdir -p "$APP_DIR"
cp -r * "$APP_DIR/"

# Ê®©ÈôêË®≠ÂÆö
chown -R ubuntu:ubuntu "$APP_DIR"

# ‰æùÂ≠òÈñ¢‰øÇÊõ¥Êñ∞
echo "üì¶ Updating dependencies..."
cd "$APP_DIR"
source venv/bin/activate
pip install -r requirements.txt --quiet

# „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ÈñãÂßã
echo "‚ñ∂Ô∏è  Starting application..."
sudo systemctl start wealthai

# „Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ
echo "üè• Health check..."
sleep 5
if curl -s http://localhost/ | grep -q "WealthAI"; then
    echo "‚úÖ Deployment successful!"
    # „Éê„ÉÉ„ÇØ„Ç¢„ÉÉ„ÉóÂâäÈô§ÔºàÊàêÂäüÊôÇÔºâ
    rm -rf "$BACKUP_DIR"
else
    echo "‚ùå Deployment failed! Rolling back..."
    sudo systemctl stop wealthai
    rm -rf "$APP_DIR"
    mv "$BACKUP_DIR" "$APP_DIR"
    sudo systemctl start wealthai
    exit 1
fi
EOF

chmod +x "$BUILD_DIR/wealthai/deploy.sh"

# „Ç¢„Éº„ÉÜ„Ç£„Éï„Ç°„ÇØ„Éà‰ΩúÊàê
log_info "Creating artifact: $ARTIFACT_NAME"
cd "$BUILD_DIR"
zip -r "$PROJECT_DIR/$ARTIFACT_NAME" wealthai/ > /dev/null

# ÁµêÊûúË°®Á§∫
log_success "Artifact created successfully!"
echo "üì¶ Artifact: $PROJECT_DIR/$ARTIFACT_NAME"
echo "üè∑Ô∏è  Version: $VERSION"
echo "üìä Size: $(du -h "$PROJECT_DIR/$ARTIFACT_NAME" | cut -f1)"

# „É°„Çø„Éá„Éº„ÇøË°®Á§∫
if command -v jq &> /dev/null; then
    echo "‚ÑπÔ∏è  Metadata:"
    cat "$BUILD_DIR/wealthai/deployment-info.json" | jq .
fi

# „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
rm -rf "$BUILD_DIR"

echo ""
echo "Next steps:"
echo "1. Upload to S3: aws s3 cp $ARTIFACT_NAME s3://wealthai-deployments-20250731/releases/"
echo "2. Deploy on EC2: ./scripts/deploy-from-s3.sh $VERSION"
